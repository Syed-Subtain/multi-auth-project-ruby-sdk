# multi_auth_sample
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MultiAuthSample
  # Utility class for OAuth 2 authorization and token management.
  class OAuthBearerToken < CoreLibrary::HeaderAuth
    # Display error message on occurrence of authentication failure.
    # @returns [String] The oAuth error message.
    def error_message
      'OAuthBearerToken: access_token is undefined.'
    end

    # Initialization constructor.
    def initialize(o_auth_bearer_token_credentials)
      auth_params = {}
      @_access_token = o_auth_bearer_token_credentials.access_token unless
        o_auth_bearer_token_credentials.nil? || o_auth_bearer_token_credentials.access_token.nil?
      auth_params['Authorization'] = "Bearer #{@_access_token}" unless @_access_token.nil?

      super auth_params
    end
  end

  # Data class for OAuthBearerTokenCredentials.
  class OAuthBearerTokenCredentials
    attr_reader :access_token

    def initialize(access_token:)
      raise ArgumentError, 'access_token cannot be nil' if access_token.nil?

      @access_token = access_token
    end

    def clone_with(access_token: nil)
      access_token ||= self.access_token

      OAuthBearerTokenCredentials.new(access_token: access_token)
    end
  end
end
